plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${minecraft_version}-${mod_version}-Fabric"
group = project.maven_group

repositories {

	maven { 
		url "https://maven2.bai.lol"
		content { 
			includeGroup "lol.bai"
			includeGroup "mcp.mobius.waila"
		}
	}
	maven { url 'https://jitpack.io' }
	maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://maven.terraformersmc.com/releases/' }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
	modCompileOnly "mcp.mobius.waila:wthit-api:fabric-${project.wthit_version}"
	modRuntimeOnly "mcp.mobius.waila:wthit:fabric-${project.wthit_version}"
	modRuntimeOnly "lol.bai:badpackets:fabric-${project.badpackets_version}"

	modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
	modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}

	/*from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}*/
}

//loom {
//	sourceSets {
//		main{
//			resources {
//				srcDir("src/generated/resources")
//				exclude("src/generated/resources/.cache")
//
//			}
//		}
//	}
//}
//
//loom {
//	runs {
//		datagen {
//			server()
//
//			name "Data Generation"
//			vmArg "-Dfabric-api.datagen"
//			vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
//			vmArg "Dfabric-api.datagen.modid=bno"
//
//			property "com.cscot.bno.existingData", file("src/generated/resources").absolutePath
//
//			runDir "build/datagen"
//		}
//	}
//}
//assemble.dependsOn runDatagen

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
/*publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}*/
